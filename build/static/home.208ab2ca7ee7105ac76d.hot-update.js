webpackHotUpdate("home",{

/***/ "./packages/frontity-chakra-theme/src/components/header/navigation.js":
/*!****************************************************************************!*\
  !*** ./packages/frontity-chakra-theme/src/components/header/navigation.js ***!
  \****************************************************************************/
/*! exports provided: SiteMenu, default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"SiteMenu\", function() { return SiteMenu; });\n/* harmony import */ var core_js_modules_es_string_replace_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! core-js/modules/es.string.replace.js */ \"./node_modules/core-js/modules/es.string.replace.js\");\n/* harmony import */ var core_js_modules_es_string_replace_js__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(core_js_modules_es_string_replace_js__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var _chakra_ui_react__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @chakra-ui/react */ \"./node_modules/@chakra-ui/react/dist/esm/index.js\");\n/* harmony import */ var frontity__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! frontity */ \"./node_modules/frontity/dist/src/index.js\");\n/* harmony import */ var frontity__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(frontity__WEBPACK_IMPORTED_MODULE_2__);\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! react */ \"./node_modules/react/index.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_3___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_3__);\n/* harmony import */ var _link__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../link */ \"./packages/frontity-chakra-theme/src/components/link.js\");\n/* harmony import */ var _chakra_ui_icons__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! @chakra-ui/icons */ \"./node_modules/@chakra-ui/icons/dist/esm/index.js\");\n/* harmony import */ var _emotion_react_jsx_runtime__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! @emotion/react/jsx-runtime */ \"./node_modules/@emotion/react/jsx-runtime/dist/emotion-react-jsx-runtime.browser.esm.js\");\nconst _excluded=[\"link\"],_excluded2=[\"link\"],_excluded3=[\"menu\",\"state\",\"actions\"];function _objectWithoutProperties(source,excluded){if(source==null)return{};var target=_objectWithoutPropertiesLoose(source,excluded);var key,i;if(Object.getOwnPropertySymbols){var sourceSymbolKeys=Object.getOwnPropertySymbols(source);for(i=0;i<sourceSymbolKeys.length;i++){key=sourceSymbolKeys[i];if(excluded.indexOf(key)>=0)continue;if(!Object.prototype.propertyIsEnumerable.call(source,key))continue;target[key]=source[key];}}return target;}function _objectWithoutPropertiesLoose(source,excluded){if(source==null)return{};var target={};var sourceKeys=Object.keys(source);var key,i;for(i=0;i<sourceKeys.length;i++){key=sourceKeys[i];if(excluded.indexOf(key)>=0)continue;target[key]=source[key];}return target;}function ownKeys(object,enumerableOnly){var keys=Object.keys(object);if(Object.getOwnPropertySymbols){var symbols=Object.getOwnPropertySymbols(object);if(enumerableOnly){symbols=symbols.filter(function(sym){return Object.getOwnPropertyDescriptor(object,sym).enumerable;});}keys.push.apply(keys,symbols);}return keys;}function _objectSpread(target){for(var i=1;i<arguments.length;i++){var source=arguments[i]!=null?arguments[i]:{};if(i%2){ownKeys(Object(source),true).forEach(function(key){_defineProperty(target,key,source[key]);});}else if(Object.getOwnPropertyDescriptors){Object.defineProperties(target,Object.getOwnPropertyDescriptors(source));}else{ownKeys(Object(source)).forEach(function(key){Object.defineProperty(target,key,Object.getOwnPropertyDescriptor(source,key));});}}return target;}function _defineProperty(obj,key,value){if(key in obj){Object.defineProperty(obj,key,{value:value,enumerable:true,configurable:true,writable:true});}else{obj[key]=value;}return obj;}function _EMOTION_STRINGIFIED_CSS_ERROR__(){return\"You have tried to stringify object returned from `css` function. It isn't supposed to be used directly (e.g. as value of the `className` prop), but rather handed to emotion so it can handle it (e.g. as value of `css` prop).\";}const Link=/*#__PURE__*/Object(frontity__WEBPACK_IMPORTED_MODULE_2__[\"styled\"])(_link__WEBPACK_IMPORTED_MODULE_4__[\"default\"], false?undefined:{target:\"e83c5i74\",label:\"Link\"})(\"position:relative;color:#fff;text-decoration:none;&:after{transition:bottom ease 0.25s,background-color ease 0.25s;content:\\\"\\\";width:100%;height:2px;position:absolute;bottom:0;left:0;background:transparent;}&:hover{&:after{bottom:-5px;background-color:\",p=>p.theme.colors.accent[400],\";}}\"+( false?undefined:\"/*# sourceMappingURL=data:application/json;charset=utf-8;base64, */\"));const Link2=/*#__PURE__*/Object(frontity__WEBPACK_IMPORTED_MODULE_2__[\"styled\"])(_link__WEBPACK_IMPORTED_MODULE_4__[\"default\"], false?undefined:{target:\"e83c5i73\",label:\"Link2\"})(\"position:relative;color:#fff;text-decoration:none;&:after{transition:bottom ease 0.25s,background-color ease 0.25s;content:\\\"\\\";width:100%;height:2px;position:absolute;bottom:0;left:0;background:transparent;}&:hover{&:after{bottom:-5px;background-color:\",p=>p.theme.colors.accent[400],\";}}\"+( false?undefined:\"/*# sourceMappingURL=data:application/json;charset=utf-8;base64, */\"));const SiteMenu=props=>Object(_emotion_react_jsx_runtime__WEBPACK_IMPORTED_MODULE_6__[\"jsx\"])(_chakra_ui_react__WEBPACK_IMPORTED_MODULE_1__[\"Stack\"],_objectSpread({ml:\"0px\",spacing:\"0px\",as:\"ul\",listStyleType:\"none\",align:\"center\",direction:\"row\",color:\"\"},props));const SiteMenuItem=_ref4=>{let{link}=_ref4,props=_objectWithoutProperties(_ref4,_excluded);return Object(_emotion_react_jsx_runtime__WEBPACK_IMPORTED_MODULE_6__[\"jsx\"])(_chakra_ui_react__WEBPACK_IMPORTED_MODULE_1__[\"Box\"],_objectSpread(_objectSpread({as:\"li\",color:\"green\",fontSize:{base:\"sm\",lg:\"md\"},fontWeight:\"medium\",fontFamily:\"Kelson\",textTransform:\"uppercase\",position:\"relative\",cursor:\"pointer\"},props),{},{children:Object(_emotion_react_jsx_runtime__WEBPACK_IMPORTED_MODULE_6__[\"jsx\"])(Link,{link:link,children:props.children})}));};const SiteMenuItem2=_ref5=>{let{link}=_ref5,props=_objectWithoutProperties(_ref5,_excluded2);return Object(_emotion_react_jsx_runtime__WEBPACK_IMPORTED_MODULE_6__[\"jsx\"])(_chakra_ui_react__WEBPACK_IMPORTED_MODULE_1__[\"Box\"],_objectSpread(_objectSpread({as:\"li\",color:\"yellow\",fontSize:\"12px\",fontWeight:\"medium\",fontFamily:\"Kelson\",textTransform:\"uppercase\",position:\"relative\",cursor:\"pointer\",margin:\"15px\",listStyle:\"none\"},props),{},{children:Object(_emotion_react_jsx_runtime__WEBPACK_IMPORTED_MODULE_6__[\"jsx\"])(Link2,{link:link,children:props.children})}));};var _ref= false?undefined:{name:\"1d5c46c-Navigation\",styles:\"position:relative;padding:10px 10px 10px 10px;border-bottom:1px solid #e6e6e6;label:Navigation;\",map:\"/*# sourceMappingURL=data:application/json;charset=utf-8;base64, */\",toString:_EMOTION_STRINGIFIED_CSS_ERROR__};var _ref2= false?undefined:{name:\"b03w0y-Navigation\",styles:\"position:absolute;top:47px;background:#000;margin-left:0px;label:Navigation;\",map:\"/*# sourceMappingURL=data:application/json;charset=utf-8;base64, */\",toString:_EMOTION_STRINGIFIED_CSS_ERROR__};var _ref3= false?undefined:{name:\"161w6up-Navigation\",styles:\"position:relative;label:Navigation;\",map:\"/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIkU6XFxQcm9qZWN0c1xcYmlsbGFob21lLWZyb250aXR5XFxwYWNrYWdlc1xcZnJvbnRpdHktY2hha3JhLXRoZW1lXFxzcmNcXGNvbXBvbmVudHNcXGhlYWRlclxcbmF2aWdhdGlvbi5qcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUEySG9DIiwiZmlsZSI6IkU6XFxQcm9qZWN0c1xcYmlsbGFob21lLWZyb250aXR5XFxwYWNrYWdlc1xcZnJvbnRpdHktY2hha3JhLXRoZW1lXFxzcmNcXGNvbXBvbmVudHNcXGhlYWRlclxcbmF2aWdhdGlvbi5qcyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IEJveCwgU3RhY2sgfSBmcm9tIFwiQGNoYWtyYS11aS9yZWFjdFwiO1xyXG5pbXBvcnQgeyBzdHlsZWQgfSBmcm9tIFwiZnJvbnRpdHlcIjtcclxuaW1wb3J0IFJlYWN0IGZyb20gXCJyZWFjdFwiO1xyXG5pbXBvcnQgRnJvbnRpdHlMaW5rIGZyb20gXCIuLi9saW5rXCI7XHJcbmltcG9ydCB7IGNzcyB9IGZyb20gXCJmcm9udGl0eVwiO1xyXG5pbXBvcnQgeyBjb25uZWN0IH0gZnJvbSBcImZyb250aXR5XCI7XHJcbmltcG9ydCB7IENoZXZyb25Eb3duSWNvbn0gZnJvbSBcIkBjaGFrcmEtdWkvaWNvbnNcIjtcclxuXHJcbmNvbnN0IExpbmsgPSBzdHlsZWQoRnJvbnRpdHlMaW5rKWBcclxuICBwb3NpdGlvbjogcmVsYXRpdmU7XHJcbiAgY29sb3I6ICNmZmY7XHJcbiAgdGV4dC1kZWNvcmF0aW9uOiBub25lO1xyXG5cclxuICAmOmFmdGVyIHtcclxuICAgIHRyYW5zaXRpb246IGJvdHRvbSBlYXNlIDAuMjVzLCBiYWNrZ3JvdW5kLWNvbG9yIGVhc2UgMC4yNXM7XHJcbiAgICBjb250ZW50OiBcIlwiO1xyXG4gICAgd2lkdGg6IDEwMCU7XHJcbiAgICBoZWlnaHQ6IDJweDtcclxuICAgIHBvc2l0aW9uOiBhYnNvbHV0ZTtcclxuICAgIGJvdHRvbTogMDtcclxuICAgIGxlZnQ6IDA7XHJcbiAgICBiYWNrZ3JvdW5kOiB0cmFuc3BhcmVudDtcclxuICB9XHJcblxyXG4gICY6aG92ZXIge1xyXG4gICAgJjphZnRlciB7XHJcbiAgICAgIGJvdHRvbTogLTVweDtcclxuICAgICAgYmFja2dyb3VuZC1jb2xvcjogJHtwID0+IHAudGhlbWUuY29sb3JzLmFjY2VudFs0MDBdfTtcclxuICAgIH1cclxuICB9XHJcbmA7XHJcblxyXG5jb25zdCBMaW5rMiA9IHN0eWxlZChGcm9udGl0eUxpbmspYFxyXG4gIHBvc2l0aW9uOiByZWxhdGl2ZTtcclxuICBjb2xvcjogI2ZmZjtcclxuICB0ZXh0LWRlY29yYXRpb246IG5vbmU7XHJcblxyXG4gICY6YWZ0ZXIge1xyXG4gICAgdHJhbnNpdGlvbjogYm90dG9tIGVhc2UgMC4yNXMsIGJhY2tncm91bmQtY29sb3IgZWFzZSAwLjI1cztcclxuICAgIGNvbnRlbnQ6IFwiXCI7XHJcbiAgICB3aWR0aDogMTAwJTtcclxuICAgIGhlaWdodDogMnB4O1xyXG4gICAgcG9zaXRpb246IGFic29sdXRlO1xyXG4gICAgYm90dG9tOiAwO1xyXG4gICAgbGVmdDogMDtcclxuICAgIGJhY2tncm91bmQ6IHRyYW5zcGFyZW50O1xyXG4gIH1cclxuXHJcbiAgJjpob3ZlciB7XHJcbiAgICAmOmFmdGVyIHtcclxuICAgICAgYm90dG9tOiAtNXB4O1xyXG4gICAgICBiYWNrZ3JvdW5kLWNvbG9yOiAke3AgPT4gcC50aGVtZS5jb2xvcnMuYWNjZW50WzQwMF19O1xyXG4gICAgfVxyXG4gIH1cclxuYDtcclxuXHJcbmV4cG9ydCBjb25zdCBTaXRlTWVudSA9IHByb3BzID0+IChcclxuICA8U3RhY2tcclxuICAgIG1sPVwiMHB4XCJcclxuICAgIHNwYWNpbmc9XCIwcHhcIlxyXG4gICAgYXM9XCJ1bFwiXHJcbiAgICBsaXN0U3R5bGVUeXBlPVwibm9uZVwiXHJcbiAgICBhbGlnbj1cImNlbnRlclwiXHJcbiAgICBkaXJlY3Rpb249XCJyb3dcIlxyXG4gICAgY29sb3I9XCJcIlxyXG4gICAgey4uLnByb3BzfVxyXG4gIC8+XHJcbik7XHJcblxyXG5cclxuXHJcbmNvbnN0IFNpdGVNZW51SXRlbSA9ICh7IGxpbmssIC4uLnByb3BzIH0pID0+IChcclxuICA8Qm94XHJcbiAgICBhcz1cImxpXCJcclxuICAgIGNvbG9yPVwiZ3JlZW5cIlxyXG4gICAgZm9udFNpemU9e3sgYmFzZTogXCJzbVwiLCBsZzogXCJtZFwiIH19XHJcbiAgICBmb250V2VpZ2h0PVwibWVkaXVtXCJcclxuICAgIGZvbnRGYW1pbHk9XCJLZWxzb25cIlxyXG4gICAgdGV4dFRyYW5zZm9ybT1cInVwcGVyY2FzZVwiXHJcbiAgICBwb3NpdGlvbj1cInJlbGF0aXZlXCJcclxuICAgIGN1cnNvcj1cInBvaW50ZXJcIlxyXG4gICAgey4uLnByb3BzfVxyXG4gICAgXHJcbiAgPlxyXG4gIFxyXG4gICAgPExpbmsgIGxpbms9e2xpbmt9Pntwcm9wcy5jaGlsZHJlbn08L0xpbms+XHJcbiAgPC9Cb3g+XHJcbik7XHJcblxyXG5jb25zdCBTaXRlTWVudUl0ZW0yID0gKHsgbGluaywgLi4ucHJvcHMgfSkgPT4gKFxyXG4gIDxCb3hcclxuICAgIGFzPVwibGlcIlxyXG4gICAgY29sb3I9XCJ5ZWxsb3dcIlxyXG4gICAgZm9udFNpemU9e1wiMTJweFwifVxyXG4gICAgZm9udFdlaWdodD1cIm1lZGl1bVwiXHJcbiAgICBmb250RmFtaWx5PVwiS2Vsc29uXCJcclxuICAgIHRleHRUcmFuc2Zvcm09XCJ1cHBlcmNhc2VcIlxyXG4gICAgcG9zaXRpb249XCJyZWxhdGl2ZVwiXHJcbiAgICBjdXJzb3I9XCJwb2ludGVyXCJcclxuICAgIG1hcmdpbj1cIjE1cHhcIlxyXG4gICAgbGlzdFN0eWxlID0gXCJub25lXCJcclxuICAgIHsuLi5wcm9wc31cclxuICA+XHJcbiAgICA8TGluazIgbGluaz17bGlua30+e3Byb3BzLmNoaWxkcmVufTwvTGluazI+XHJcbiAgPC9Cb3g+XHJcbik7XHJcblxyXG5cclxuXHJcbmNvbnN0IE5hdmlnYXRpb24gPSAoeyBtZW51LHN0YXRlLGFjdGlvbnMsLi4ucHJvcHMgfSkgPT5cclxue1xyXG5cclxuICBjb25zdCBpdGVtcyA9IHN0YXRlLnNvdXJjZS5nZXQoYC9tZW51LzkyL2ApLml0ZW1zO1xyXG5cclxuICByZXR1cm4oXHJcbiAgPEJveCBhcz1cIm5hdlwiIHdpZHRoPVwiMTAwJVwiIHBvc2l0aW9uPVwiYWJzb2x1dGVcIiBtYXJnaW5Ub3A9XCIzMHB4XCIgZGlzcGxheT17eyBiYXNlOiBcIm5vbmVcIiwgbGc6IFwiYmxvY2tcIiB9fSB7Li4ucHJvcHN9PlxyXG4gICAgPFNpdGVNZW51PlxyXG4gICAgICB7aXRlbXM/Lm1hcCgoe3RpdGxlLHVybCxjaGlsZF9pdGVtc30pID0+e1xyXG5cclxuICAgICAgICAgIGxldCByZXN1bHQgPSB1cmwucmVwbGFjZShcImh0dHA6Ly9iaWxsYWhvbWUuY29tXCIsIFwiXCIpLnJlcGxhY2UoJ2h0dHBzOi8vYmlsbGFob21lLmNvbScsIFwiXCIpLnJlcGxhY2UoJ2h0dHA6Ly9iaWxsYWhvbWVzLmNvbS9iYWNrZW5kJywgXCJcIikucmVwbGFjZSgnaHR0cHM6Ly9iaWxsYWhvbWVzLmNvbScsIFwiXCIpLnJlcGxhY2UoJ2h0dHA6Ly83Mi4xNjcuMzkuNjknLCBcIlwiKTsgIFxyXG4gICAgICAgICBjb25zdCB1cmxzID0gcmVzdWx0XHJcbiAgICAgICAgICB7Y29uc29sZS5sb2coJ3Jlc3VsdCcsIHVybCl9XHJcbiAgICAgICAgcmV0dXJuIChcclxuICAgICAgICA8ZGl2ICBjbGFzcz1cIm1tZW51XCIgY3NzPXtjc3NgcG9zaXRpb246cmVsYXRpdmU7YCB9PlxyXG4gICAgICAgIDxTdHlsZWRNZW51IHN1Ym1lbnU9e2NoaWxkX2l0ZW1zfT5cclxuICAgICAgICA8U2l0ZU1lbnVJdGVtICBrZXk9e3RpdGxlfSBsaW5rPXt1cmxzfSAgb25Nb3VzZUxlYXZlPXsoKT0+e3NldFRpbWVvdXQoKCkgPT4ge1xyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBhY3Rpb25zLnRoZW1lLmhpZGVTdWJtZW51KClcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgfSwgNTAwKSAgXHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgfT5cclxuICAgICAgICAgICAgICB7Y2hpbGRfaXRlbXMgJiYgPHAgb25Qb2ludGVyTW92ZT17KCk9PnthY3Rpb25zLnRoZW1lLnNob3dTdWJtZW51KCksYWN0aW9ucy50aGVtZS5zaG93Y3VycmVudFN1Yk1lbnUodGl0bGUpfX0gXHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgID4gIHt0aXRsZX0gXHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxDaGV2cm9uRG93bkljb24gbWI9ezB9IG1sPXsxfSB3PXs2fSBoPXs2fS8+IDwvcD5cclxuICAgICAgICAgICAgICB9IHshY2hpbGRfaXRlbXMgICYmPHA+IHt0aXRsZX08L3A+IH1cclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIFxyXG5cclxuICAgICAgICA8L1NpdGVNZW51SXRlbT5cclxuICAgICAgIFxyXG4gICAgICAgIDxNZW51SXRlbTIgc3VibWVudT17Y2hpbGRfaXRlbXN9PlxyXG4gICAgICAgICA8TWVudUl0ZW0gIG9uTW91c2VMZWF2ZT17KCk9PnsgYWN0aW9ucy50aGVtZS5zaG91bGRzaG93U3VibWVudShcImNsb3NlZFwiKSwgYWN0aW9ucy50aGVtZS5oaWRlU3VibWVudSgpfX0gY2xhc3M9XCJpbm5lcm1lbnVcIiBrZXk9e3RpdGxlfSBjc3M9e2Nzc2BcclxuICAgICAgICBwb3NpdGlvbjogYWJzb2x1dGU7XHJcbiAgICAgICAgdG9wOiA0N3B4O1xyXG4gICAgICAgIGJhY2tncm91bmQ6ICMwMDA7XHJcbiAgICAgICAgbWFyZ2luLWxlZnQ6IDBweDtcclxuICAgICAgICBcclxuICAgICAgICBgfT5cclxuICAgICAgICBcclxuXHJcbiAgICAgICAgeyhzdGF0ZS50aGVtZS5zdWJNZW51ICYmIGNoaWxkX2l0ZW1zICYmIHN0YXRlLnRoZW1lLmN1cnJlbnRTdWJNZW51ID09PSB0aXRsZSkgJiYgY2hpbGRfaXRlbXM/Lm1hcCgoe3RpdGxlLHVybH0pID0+IHtcclxuICAgICAgICAgIGxldCByZXN1bHQyID0gdXJsLnJlcGxhY2UoXCJodHRwOi8vYmlsbGFob21lLmNvbVwiLCBcIlwiKS5yZXBsYWNlKCdodHRwczovL2JpbGxhaG9tZS5jb20nLCAnJykucmVwbGFjZSgnaHR0cDovL2JpbGxhaG9tZXMuY29tJywgJycpLnJlcGxhY2UoJ2h0dHBzOi8vYmlsbGFob21lcy5jb20nLCAnJykucmVwbGFjZSgnaHR0cDovLzcyLjE2Ny4zOS42OScsICcnKTsgIFxyXG4gICAgICAgICBjb25zdCB1cmxzID0gcmVzdWx0MlxyXG4gICAgICAgICAgcmV0dXJuICggXHJcbiAgICAgICAgICAgIDxTaXRlTWVudUl0ZW0yIGtleT17dGl0bGV9IGxpbms9e3VybHN9ICAgb25Nb3VzZUVudGVyPXsoKT0+e2FjdGlvbnMudGhlbWUuc2hvdWxkc2hvd1N1Ym1lbnUoXCJvcGVuXCIpfX0+XHJcbiAgICAgICAgICAgICAgICA8ZGl2ICBjc3M9e2Nzc2AgcG9zaXRpb24gOiByZWxhdGl2ZTtcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBwYWRkaW5nOiAxMHB4IDEwcHggMTBweCAxMHB4O1xyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgIGJvcmRlci1ib3R0b206IDFweCBzb2xpZCAjZTZlNmU2O1xyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICBgfVxyXG4gICAgICAgICAgICAgICAgPlxyXG4gICAgICAgICAgICAgICAgICAgICAgICB7dGl0bGV9IFxyXG4gICAgICAgICAgICAgICAgPC9kaXY+ICBcclxuICAgICAgICAgICAgPC9TaXRlTWVudUl0ZW0yPiAgICAgICAgXHJcbiAgICAgICAgICk7XHJcbiAgICAgICAgfSlcclxuICAgICAgfSBcclxuICAgICAgICAgIDwvTWVudUl0ZW0+XHJcbiAgICAgICAgPC9NZW51SXRlbTI+ICAgIFxyXG4gICAgICAgPC9TdHlsZWRNZW51PlxyXG4gICAgIFxyXG4gICAgICA8L2Rpdj5cclxuICAgICBcclxuICAgICAgKTsgfVxyXG4gICAgICApfSBcclxuICAgIDwvU2l0ZU1lbnU+XHJcbiAgPC9Cb3g+XHJcblxyXG4pfTtcclxuXHJcbmV4cG9ydCBkZWZhdWx0IGNvbm5lY3QoTmF2aWdhdGlvbik7XHJcblxyXG5cclxuY29uc3QgTWVudUl0ZW0gPSBzdHlsZWQudWxgXHJcbmZvbnQtc2l6ZTogMTBweCAhIGltcG9ydGFudFxyXG5ib3JkZXIgOiAycHggc29saWRcclxuYmFja2dyb3VuZCA6ICMxZjIwMjQ7XHJcbnBvc2l0aW9uIDogcmVsYXRpdmVcclxubGlzdC1zdHlsZSA6IG5vbmU7XHJcbmJvcmRlci10b3A6IDRweCBzb2xpZCAjZmZmZmZmO1xyXG5gO1xyXG5cclxuY29uc3QgTWVudUl0ZW0yID0gc3R5bGVkLmRpdmBcclxucG9zaXRpb246IGFic29sdXRlO1xyXG4gICAgICAgIHRvcDogNDZweDtcclxuICAgICAgICBiYWNrZ3JvdW5kOiB3aGl0ZTtcclxuICAgICAgICBjb2xvcjpyZWQ7XHJcbiAgICAgICAgd2lkdGg6MjMwcHg7XHJcbiAgICAgICAgdmlzaWJpbGl0eTogdmlzaWJsZTtcclxuYDtcclxuXHJcblxyXG4vLyB2aXNpYmlsaXR5OiAkeyhwcm9wcykgPT4gKHByb3BzLmlzUG9zdFR5cGUgPyBcInZpc2libGVcIiA6IFwiaGlkZGVuXCIpfTtcclxuY29uc3QgU3R5bGVkTWVudSA9IHN0eWxlZC51bGBcclxubGlzdC1zdHlsZSA6IG5vbmU7XHJcbiAgJHtNZW51SXRlbX06aG92ZXIgJiB7XHJcbiAgICB2aXNpYmlsaXR5OiAkeyh7c3VibWVudX0pID0+IHN1Ym1lbnUgJiYgJ2hpZGRlbid9O1xyXG4gIH1cclxuXHJcbmA7Il19 */\",toString:_EMOTION_STRINGIFIED_CSS_ERROR__};const Navigation=_ref6=>{let{menu,state,actions}=_ref6,props=_objectWithoutProperties(_ref6,_excluded3);const items=state.source.get(`/menu/92/`).items;return Object(_emotion_react_jsx_runtime__WEBPACK_IMPORTED_MODULE_6__[\"jsx\"])(_chakra_ui_react__WEBPACK_IMPORTED_MODULE_1__[\"Box\"],_objectSpread(_objectSpread({as:\"nav\",width:\"100%\",position:\"absolute\",marginTop:\"30px\",display:{base:\"none\",lg:\"block\"}},props),{},{children:Object(_emotion_react_jsx_runtime__WEBPACK_IMPORTED_MODULE_6__[\"jsx\"])(SiteMenu,{children:items===null||items===void 0?void 0:items.map(({title,url,child_items})=>{let result=url.replace(\"http://billahome.com\",\"\").replace('https://billahome.com',\"\").replace('http://billahomes.com/backend',\"\").replace('https://billahomes.com',\"\").replace('http://72.167.39.69',\"\");const urls=result;{console.log('result',url);}return Object(_emotion_react_jsx_runtime__WEBPACK_IMPORTED_MODULE_6__[\"jsx\"])(\"div\",{class:\"mmenu\",css:_ref3,children:Object(_emotion_react_jsx_runtime__WEBPACK_IMPORTED_MODULE_6__[\"jsxs\"])(StyledMenu,{submenu:child_items,children:[Object(_emotion_react_jsx_runtime__WEBPACK_IMPORTED_MODULE_6__[\"jsxs\"])(SiteMenuItem,{link:urls,onMouseLeave:()=>{setTimeout(()=>{actions.theme.hideSubmenu();},500);},children:[child_items&&Object(_emotion_react_jsx_runtime__WEBPACK_IMPORTED_MODULE_6__[\"jsxs\"])(\"p\",{onPointerMove:()=>{actions.theme.showSubmenu(),actions.theme.showcurrentSubMenu(title);},children:[\"  \",title,Object(_emotion_react_jsx_runtime__WEBPACK_IMPORTED_MODULE_6__[\"jsx\"])(_chakra_ui_icons__WEBPACK_IMPORTED_MODULE_5__[\"ChevronDownIcon\"],{mb:0,ml:1,w:6,h:6}),\" \"]}),\" \",!child_items&&Object(_emotion_react_jsx_runtime__WEBPACK_IMPORTED_MODULE_6__[\"jsxs\"])(\"p\",{children:[\" \",title]})]},title),Object(_emotion_react_jsx_runtime__WEBPACK_IMPORTED_MODULE_6__[\"jsx\"])(MenuItem2,{submenu:child_items,children:Object(_emotion_react_jsx_runtime__WEBPACK_IMPORTED_MODULE_6__[\"jsx\"])(MenuItem,{onMouseLeave:()=>{actions.theme.shouldshowSubmenu(\"closed\"),actions.theme.hideSubmenu();},class:\"innermenu\",css:_ref2,children:state.theme.subMenu&&child_items&&state.theme.currentSubMenu===title&&(child_items===null||child_items===void 0?void 0:child_items.map(({title,url})=>{let result2=url.replace(\"http://billahome.com\",\"\").replace('https://billahome.com','').replace('http://billahomes.com','').replace('https://billahomes.com','').replace('http://72.167.39.69','');const urls=result2;return Object(_emotion_react_jsx_runtime__WEBPACK_IMPORTED_MODULE_6__[\"jsx\"])(SiteMenuItem2,{link:urls,onMouseEnter:()=>{actions.theme.shouldshowSubmenu(\"open\");},children:Object(_emotion_react_jsx_runtime__WEBPACK_IMPORTED_MODULE_6__[\"jsx\"])(\"div\",{css:_ref,children:title})},title);}))},title)})]})});})})}));};/* harmony default export */ __webpack_exports__[\"default\"] = (Object(frontity__WEBPACK_IMPORTED_MODULE_2__[\"connect\"])(Navigation));const MenuItem=Object(frontity__WEBPACK_IMPORTED_MODULE_2__[\"styled\"])(\"ul\", false?undefined:{target:\"e83c5i72\",label:\"MenuItem\"})( false?undefined:{name:\"pa2o0s\",styles:\"font-size:10px!importantborder :2px solid background :#1f2024;position:relative list-style :none;border-top:4px solid #ffffff\",map:\"/*# sourceMappingURL=data:application/json;charset=utf-8;base64, */\",toString:_EMOTION_STRINGIFIED_CSS_ERROR__});const MenuItem2=Object(frontity__WEBPACK_IMPORTED_MODULE_2__[\"styled\"])(\"div\", false?undefined:{target:\"e83c5i71\",label:\"MenuItem2\"})( false?undefined:{name:\"zthqlf\",styles:\"position:absolute;top:46px;background:white;color:red;width:230px;visibility:visible\",map:\"/*# sourceMappingURL=data:application/json;charset=utf-8;base64, */\",toString:_EMOTION_STRINGIFIED_CSS_ERROR__});// visibility: ${(props) => (props.isPostType ? \"visible\" : \"hidden\")};\nconst StyledMenu=Object(frontity__WEBPACK_IMPORTED_MODULE_2__[\"styled\"])(\"ul\", false?undefined:{target:\"e83c5i70\",label:\"StyledMenu\"})(\"list-style:none;\",MenuItem,\":hover &{visibility:\",({submenu})=>submenu&&'hidden',\";}\"+( false?undefined:\"/*# sourceMappingURL=data:application/json;charset=utf-8;base64, */\"));//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./packages/frontity-chakra-theme/src/components/header/navigation.js\n");

/***/ })

})