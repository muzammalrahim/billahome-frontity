webpackHotUpdate("home",{

/***/ "./packages/frontity-chakra-theme/src/utils/handlers.js":
/*!**************************************************************!*\
  !*** ./packages/frontity-chakra-theme/src/utils/handlers.js ***!
  \**************************************************************/
/*! exports provided: menuHandler, homecontentHandler, getAllpropertiesHandler, propertiesHandler, mediaHandler */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"menuHandler\", function() { return menuHandler; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"homecontentHandler\", function() { return homecontentHandler; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"getAllpropertiesHandler\", function() { return getAllpropertiesHandler; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"propertiesHandler\", function() { return propertiesHandler; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"mediaHandler\", function() { return mediaHandler; });\n/* harmony import */ var core_js_modules_es_promise_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! core-js/modules/es.promise.js */ \"./node_modules/core-js/modules/es.promise.js\");\n/* harmony import */ var core_js_modules_es_promise_js__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(core_js_modules_es_promise_js__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var core_js_modules_es_object_assign_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! core-js/modules/es.object.assign.js */ \"./node_modules/core-js/modules/es.object.assign.js\");\n/* harmony import */ var core_js_modules_es_object_assign_js__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(core_js_modules_es_object_assign_js__WEBPACK_IMPORTED_MODULE_1__);\n// added by taimoor\nconst menuHandler={name:\"menus\",priority:10,pattern:\"/menu/:slug\",func:async({link,route,params,state,libraries})=>{const{api}=libraries.source;const{slug}=params;// 1. fetch the data you want from the endpoint page\n// const menuList = await libraries.source.api.get({\n// endpoint: \"menu-items\",\n// params: {\n// menus: params.id,\n// per_page: 100, // To make sure we get all elements\n// },\n// });\nconst response=await libraries.source.api.get({endpoint:`/menus/v1/menus/${slug}`});// \n// const items = await libraries.source.populate({\n// response: menuList,\n// state\n// });\n// Parse the JSON to get the object\nconst menuData=await response.json();// Add the menu items to source.data\nconst menu=state.source.data[link];Object.assign(menu,{items:menuData.items,isMenu:true});// 2. get an array with each item in json format\n// const items = await response.json();\n// 3. add data to source\n// const currentPageData = state.source.data[route];\n// Object.assign(currentPageData, {\n// id,\n// items: items,\n// isMenu: true,\n// });\n}};const homecontentHandler={name:\"myplugin\",priority:10,pattern:\"/home-content\",func:async({link,route,params,state,libraries})=>{const{api}=libraries.source;const{slug}=params;// 1. fetch the data you want from the endpoint page\n// const menuList = await libraries.source.api.get({\n// endpoint: \"menu-items\",\n// params: {\n// menus: params.id,\n// per_page: 100, // To make sure we get all elements\n// },\n// });\nconst response=await libraries.source.api.get({endpoint:`sliderwidget`});//\n// const items = await libraries.source.populate({\n// response: menuList,\n// state\n// });\n// Parse the JSON to get the object\nconst menuData=await response.json();// Add the menu items to source.data\nconst menu=state.source.data[link];Object.assign(menu,{items:menuData.items,isMenu:true});// 2. get an array with each item in json format\n// const items = await response.json();\n// 3. add data to source\n// const currentPageData = state.source.data[route];\n// Object.assign(currentPageData, {\n// id,\n// items: items,\n// isMenu: true,\n// });\n}};// added by taimoor\nconst getAllpropertiesHandler={name:\"properties\",priority:18,pattern:\"/properties\",func:async({route,params,state,libraries})=>{const{api}=libraries.source;const{id}=params;// 1. fetch the data you want from the endpoint page\nconst response=await api.get({endpoint:\"properties\",params:{per_page:100,// To make sure we get all elements\npage:params.page,_embed:true}});// 2. get an array with each item in json format\nconst items=await response.json();const total=libraries.source.getTotal(response);const totalPages=libraries.source.getTotalPages(response);// 3. add data to source\nconst currentPageData=state.source.data[route];Object.assign(currentPageData,{id,items,totalPages,total});}};const propertiesHandler={name:\"property\",priority:18,pattern:\"/latest-properties/:page\",func:async({route,params,state,libraries})=>{const{api}=libraries.source;const{id}=params;// 1. fetch the data you want from the endpoint page\nconst response=await api.get({endpoint:\"properties\",params:{per_page:6,// To make sure we get all elements\npage:params.page,_embed:true}});// 2. get an array with each item in json format\nconst items=await response.json();const total=libraries.source.getTotal(response);const totalPages=libraries.source.getTotalPages(response);// 3. add data to source\nconst currentPageData=state.source.data[route];Object.assign(currentPageData,{id,items,totalPages,total});}};const mediaHandler={name:\"site-media\",priority:18,pattern:\"/all-media/:ids\",func:async({route,params,state,libraries})=>{const{api}=libraries.source;const{id}=params;// 1. fetch the data you want from the endpoint page\nconst response=await api.get({endpoint:\"media\",params:{include:params.ids,// To make sure we get all elements\nper_page:100,// To make sure we get all elements\n_embed:true}});// 2. get an array with each item in json format\nconst items=await response.json();const total=libraries.source.getTotal(response);const totalPages=libraries.source.getTotalPages(response);// 3. add data to source\nconst currentPageData=state.source.data[route];Object.assign(currentPageData,{id,items,totalPages,total});}};//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./packages/frontity-chakra-theme/src/utils/handlers.js\n");

/***/ })

})